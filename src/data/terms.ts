import type { Term } from '@/lib/types';

export const terms: Term[] = [
  {
    id: 'artificial-intelligence',
    name: 'Artificial Intelligence (AI)',
    category: 'Foundational Concepts',
    content: {
      simpleDefinition: 'The broad field of computer science dedicated to creating machines that can perform tasks typically requiring human intelligence.',
      analogy: 'Think of AI as the entire field of "smart machines" – from simple calculators that can "think" through math problems to complex robots that can navigate and interact with the world.',
      whyItMatters: 'AI is the overarching domain that encompasses all the other terms here, representing the ambition to build intelligent systems that can augment or automate human capabilities.',
    },
  },
  {
    id: 'generative-ai',
    name: 'Generative AI',
    category: 'Foundational Concepts',
    content: {
      simpleDefinition: 'AI that *creates content* by predicting the next token (text, images, music, code), rather than just analyzing existing data.',
      analogy: 'An artist or writer who *produces* new works, unlike an AI that just identifies existing ones.',
      example: 'An AI writing a new marketing email from bullet points.',
      elaboration: 'Unlike traditional (discriminative) AI that classifies or predicts based on existing patterns, generative AI learns to understand the underlying structure of data and then produces novel, original outputs that resemble the training data but are not identical copies. This capability extends to various modalities, from generating realistic human faces to composing musical pieces or even designing new molecules.',
      whyItMatters: 'Enables AI creativity, generating new content from sales copy to product designs, and opening up possibilities for automation in creative and knowledge-intensive tasks.',
    },
  },
  {
    id: 'large-language-model',
    name: 'Large Language Model (LLM)',
    category: 'Foundational Concepts',
    content: {
      simpleDefinition: 'A powerful AI trained on vast text data to understand, generate, and respond to human language naturally.',
      analogy: 'A super well-read librarian who can also write essays and converse intelligently.',
      example: 'AI chatbots like ChatGPT or Gemini.',
      elaboration: 'These models are "large" because they contain billions or even trillions of model parameters, allowing them to capture complex linguistic patterns and world knowledge from the massive datasets they are trained on. This scale enables them to perform a wide range of natural language tasks, including translation, summarization, question-answering, and creative writing, often exhibiting emergent capabilities not explicitly programmed.',
      whyItMatters: 'LLMs are the foundation of most text-based generative AI, transforming information interaction and communication automation, and serving as versatile tools for various business and creative applications.',
    },
  },
  {
    id: 'token',
    name: 'Token',
    category: 'Foundational Concepts',
    content: {
      simpleDefinition: 'The fundamental "building block" of text processed and generated by a Large Language Model (LLM), typically part of a word, a whole word, or punctuation.',
      analogy: 'You can think of them like LEGO bricks, which the AI uses as both input and output.',
      example: '`hello` = 1 token; `supercalifragilisticexpialidocious` = 4-5 tokens. (Rule of thumb: 1 token ≈ 4 characters or 0.75 words).',
      elaboration: "LLMs don't process text character by character or word by word in a simple sense. Instead, they break down text into these sub-word units called tokens. This allows them to handle rare words more effectively and manage vocabulary size. The number of tokens directly impacts the computational resources required for processing and generating text, and it's also how usage costs are often calculated for API access to LLMs.",
      whyItMatters: 'Token limits affect AI processing and generation capacity, helping manage input size and anticipate output length, and influencing the cost-efficiency of using LLMs.',
    },
  },
  {
    id: 'prompt',
    name: 'Prompt',
    category: 'Foundational Concepts',
    content: {
      simpleDefinition: 'The instruction or input given to a Generative AI model to guide its output.',
      analogy: 'A recipe for a chef; clear instructions lead to better results.',
      example: '"Write a short email to the sales team about Q3 performance."',
      elaboration: 'A prompt can be a simple question, a detailed command, or even an example of the desired output. Its effectiveness hinges on its clarity, specificity, and the context it provides. A well-crafted prompt helps steer the AI towards generating relevant, accurate, and high-quality content, acting as the primary interface for human-AI interaction.',
      whyItMatters: "Directly impacts AI output quality; it's how you \"talk\" to the AI and is fundamental to controlling and directing its creative capabilities.",
    },
  },
  {
    id: 'context-window',
    name: 'Context Window',
    category: 'Foundational Concepts',
    content: {
        simpleDefinition: "The amount of text (measured in Tokens) that an Large Language Model (LLM) can consider at one time when processing an input or generating a response. It defines the AI's \"short-term memory\" for a given interaction.",
        analogy: "Imagine talking to someone who has a very small notepad. They can remember everything you say as long as it fits on the notepad. Once it's full, they forget the oldest information to make room for new notes. The notepad size is their context window.",
        example: "If an LLM has a 4,000-token context window and you provide a 5,000-token document, the model will only \"see\" and process the most recent 4,000 tokens, ignoring the beginning. Similarly, in a long conversation, it might forget early details depending on how much data is being stored in its Context Window.",
        whyItMatters: "The size of the Context Window significantly impacts an AI's ability to maintain coherence over long conversations, understand lengthy documents, accurately follow multi-step instructions, and grasp complex themes. It's a key practical limitation and development frontier for LLMs.",
    },
  },
  {
    id: 'ai-agents',
    name: 'AI Agents',
    category: 'Foundational Concepts',
    content: {
        simpleDefinition: "Autonomous AI systems that perceive their environment, process information, make decisions, and take actions to achieve specific goals, often interacting with humans or other systems.",
        analogy: "Like a personal assistant who not only understands your requests but can also proactively gather information, plan steps, and execute tasks on your behalf without constant supervision.",
        example: "An AI scheduling assistant that manages your calendar and sends meeting invites, an AI in a game that navigates a virtual world and makes strategic moves, or the Coding Agent that helps an engineer write code in their IDE.",
        whyItMatters: "Agents represent a significant advancement towards more independent and goal-oriented AI applications, moving beyond simple response generation to autonomous task execution and problem-solving."
    }
  },
  {
    id: 'prompt-engineering',
    name: 'Prompt Engineering',
    category: 'Interaction & Refinement',
    content: {
      simpleDefinition: 'The skill of crafting effective Prompts to achieve desired AI results by understanding how the AI "thinks".',
      analogy: "Imagine you're a head chef giving instructions to a very talented cook. If you simply say, \"Make soup,\" you'll get a generic soup. But if you provide a precise, detailed recipe like, \"Make a rich, creamy tomato bisque, slightly smoky, with a basil chiffonade, serving four,\" the cook can deliver that exact, perfect dish. Prompt Engineering is like learning to give those precise, detailed \"recipes\" to your AI to get the exact, tailored content you want.",
      example: 'Asking for a "hyper-realistic photograph of a stoic golden retriever wearing spectacles, sitting in a leather armchair by a fireplace," instead of just "a picture."',
      elaboration: "This discipline involves experimenting with different phrasing, adding constraints, specifying tone, format, and style, and providing examples or context. It's an iterative process of refining inputs to elicit the most accurate, creative, or useful responses from the AI. Effective prompt engineering can significantly improve the utility and reliability of Generative AI applications.",
      whyItMatters: "Crucial for unlocking Generative AI's full potential, ensuring relevant outputs, and impacting work with AI agents by maximizing their effectiveness and minimizing undesirable results.",
    },
    interactiveTools: [
      {
        name: 'Anthropic Prompt Engineering Tutorial',
        url: 'https://github.com/anthropics/prompt-eng-interactive-tutorial',
        description: 'An interactive guide on prompt engineering.',
      },
    ],
  },
  {
    id: 'embeddings',
    name: 'Embeddings',
    category: 'Interaction & Refinement',
    content: {
      simpleDefinition: 'Numerical representations capturing the meaning or characteristics of data (words, sentences, images); similar meanings have similar numerical representations.',
      analogy: 'Numerical "fingerprints" for ideas, where similar ideas have numerically close "fingerprints."',
      example: '"King" and "queen" have very similar Embeddings, differing mainly in "gender."',
      elaboration: "These high-dimensional vectors allow AI models to quantify the relationships and similarities between different pieces of information. For instance, in a search engine, the query's embedding can be compared to document embeddings to find the most semantically relevant results, even if the exact keywords aren't present. They are crucial for tasks like semantic search, content recommendation, and understanding contextual relationships.",
      whyItMatters: "Fundamental to how AI understands context, similarity, and performs tasks like search, recommendation, and coherent text generation. They are the AI's internal language for representing and processing meaning.",
    },
    interactiveTools: [
      {
        name: 'Wizmap Tool',
        url: 'https://poloclub.github.io/wizmap/',
        description: 'Easy to use tool for visualizing embeddings.',
      },
      {
        name: 'TensorFlow Embeddings Projector',
        url: 'https://projector.tensorflow.org/',
        description: 'Advanced tool for exploring embeddings.',
      },
    ],
  },
];

export const categories = Array.from(new Set(terms.map(term => term.category))).sort();
